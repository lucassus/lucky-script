program            : statements

statements         : _NEWLINE* statement? (_NEWLINE+ statement?)*

statement          : func_declaration
                   | if_statement
                   | return_statement
                   | expression

if_statement       : "if" "(" expression ")" block

return_statement   : "return" expression

expression         : assigment
                   | anonymous_func
                   | comparison

comparison         : arith_expression (("<=" | "<" | "==" | ">" | ">=") arith_expression)*

arith_expression   : term (("+" | "-") term)*

assigment          : IDENTIFIER "=" expression

func_declaration   : "function" IDENTIFIER "(" func_parameters ")" block

anonymous_func     : "function" "(" func_parameters ")" block

func_parameters    : (IDENTIFIER ("," IDENTIFIER)*)?

block              : "{" statements "}"

term               : factor (("*" | "/") factor)*

factor             : ("+" | "-") factor
                   | power

power              : atom ("**" factor)*

atom               : NUMBER
                   | func_call
                   | IDENTIFIER
                   | "(" expression ")"

func_call          : IDENTIFIER "(" func_call_args ")"

func_call_args     : (expression ("," expression)*)?

%import common.WS_INLINE
%import common.NEWLINE -> _NEWLINE
%import common.CNAME -> IDENTIFIER
%import common.NUMBER

%ignore WS_INLINE
