program               : statements

statements            : _discard_newlines statement
                      | _discard_newlines (statement _NEWLINE _discard_newlines)*

_discard_newlines     : _NEWLINE*

statement             : func_decr
                      | "return" expression -> return
                      | if_statement
                      | expression

if_statement          : "if" conditions block ("elseif" conditions block)* ("else" block)?

conditions            : "(" comparison ")"

func_arg              : assigment
                      | IDENTIFIER

func_args             : [func_arg ("," func_arg)*]

func_decr             : "function" IDENTIFIER "(" func_args ")" block

expression            : assigment
                      | anonymous_func_decr
                      | term (("+" | "-") term)*

comparison            : expression ("<=" | "<" | "==" | ">" | ">=") expression

anonymous_func_decr   : "function" "(" func_args ")" block

block                 : "{" statements "}"

assigment             : IDENTIFIER "=" expression

term                  : factor (("*" | "/") factor)*

factor                : ("+" | "-") factor
                      | power

power                 : atom ("**" factor)*

atom                  : NUMBER
                      | func_call
                      | IDENTIFIER
                      | "(" expression ")"

func_call_args        : [expression ("," expression)*]

func_call             : IDENTIFIER "("  func_call_args ")"

%import common.WS_INLINE
%import common.NEWLINE -> _NEWLINE
%import common.CNAME -> IDENTIFIER
%import common.NUMBER

%ignore WS_INLINE
