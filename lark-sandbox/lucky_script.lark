program     : statements

statements  : statement* _NEWLINE*

statement   : _NEWLINE+ expression
            | function_declaration
            | "return" expression -> return
            | expression

function_argument : assigment
                  | IDENTIFIER

function_arguments : [function_argument ("," function_argument)*]

function_declaration: "function" IDENTIFIER "(" function_arguments ")" block

expression  : assigment
            | anonymous_function_declaration
            | term (("+" | "-") term)*

anonymous_function_declaration : "function" "(" function_arguments ")" block

block       : "{" statements "}"

assigment   : IDENTIFIER "=" expression

term        : factor (("*" | "/") factor)*

factor      : ("+" | "-") factor
            | power

power       : atom ("**" factor)*

atom        : NUMBER
            | function_call
            | IDENTIFIER
            | "(" expression ")"

function_call_arguments : [expression ("," expression)*]

function_call: IDENTIFIER "("  function_call_arguments ")"

%import common.WS
%import common.NEWLINE -> _NEWLINE
%import common.CNAME -> IDENTIFIER
%import common.NUMBER

%ignore WS
